# you can test locally by using:
# gitlab-runner exec docker {test_name}

# use ubuntu image (lts)
image: ubuntu:latest

# what language the build will be configured for
language: python

# specify what versions of python will be used
# note that all of the versions listed will be tried
matrix:
    include:
        - python: 3.5
        - python: 3.6
        - python: 3.7

# what branches should be evaluated
branches:
    only:
        - master
        - dev
        - dev-ci

variables:
    QT_QPA_PLATFORM: "offscreen"

before_install:
    # general
    - apt-get update
    - apt-get install -y software-properties-common

    - export DEBIAN_FRONTEND=noninteractive
    - apt-get install -y tzdata
    - ln -fs /usr/share/zoneinfo/Europe/Zurich /etc/localtime
    - dpkg-reconfigure --frontend noninteractive tzdata

    # installing miniconda
    - wget -O miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b

install:
    # Setting up test environments
    # - conda env create -q -n test_environment python=$TRAVIS_PYTHON_VERSION --file environment.yml
    - conda env create -q -n test_environment python=$TRAVIS_PYTHON_VERSION 
    - source activate test_environment
    - pip install --upgrade pip
    - pip install coverage coveralls flake8
    - pip install . 

before_script:
    - flake8 codebase

# the actual commands to run
script:
    - cd ~/teiliApps/
    - coverage run -m unittest discover unit_tests/

# generate a coverage report to send to back to user
after_success:
    - coverage report
    - coveralls
